servlets
    [diagram]

    // servlets need to be placed in a name package on creation
    // servlets can have multiple paths, e.g. /login and /register would call the same servlet

    typical process in a servlet
        regardless of the application, servlets usually carry out the folloeing routine
        - read any data sent by the user
            - capture data sent by a html form
        - look up http information
            - determine browser version, host name of client, etc.
        - process the data and generate results
        - format the results
            - generate html on the fly
        - set appropriate http headers
        - send document back to client

    first time you run a servlet, it takes longer than any other
        it has to be compiled first

    servlet life cycle
        - load servlet class
        - create instance of servlet
        - call init()
        - call service()
            // each other step is only called once, whereas this one is called as many times as necessary
        - destroy()

    useful servlet interfaces
        - HttpSession
            allows state to be stored across multiple user requests
        - Cookie
            a cookie
        - ServletContext
            methods to communicate with the servlet container
        - Filter
            provide means to intercept and pre- or post-process requests and responses

        
    basics
        servlets typically extend HttpServlet and override doGet or doPost
        these can also be used to call each other, if you want behaviour to be uniform
        in netbeans, this is done for us, and both methods are sent to processRequest by default

    the HttpRequest object
        - request uri
        - parameters
        - attributes
        - session
        - headers, request body via getInputStream(), ...

    using query strings to send parameters
        for GET requests, these are in the URI after ?
            e.g.
               form.asp?name=value&name2=value2
        for POST requests, they go in the body of the html request

        these can be seen by right-clicking in the servlet code, and used in the code with request.getParameter("name")

        can also find out each parameter's name with getParameterNames, which can then be looped through

        parameters are always strings at first

    sending a request from a form
        <body>
            <h1> login </h1>
            <form action="LoginServlet" method="post">
                <fieldset>
                    <label> username </label>
                    <input type="text" name="username">
                    <label> password </label>
                    <input type="text" name="password">
                    <input type="submit" value="Submit">
                </fieldset>
            </form>
        </body>

    making a webpage dynamic
        