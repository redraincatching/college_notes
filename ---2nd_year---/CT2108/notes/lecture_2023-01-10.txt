computer network
    a collection of autonomous devices interconected by some kind of network technology
    the internet is a network of networks
        the world wide web is not a physical network, it is a distributed client-server application
    two computers are said to be interconnected if they are able to exchange information

    the client-server model
        employed in most network applications
        the server is a powerful machine that can provide resources to many clients concurrently
        the client is a simpler device that interprets or displays those resources
        involves requests and replies
        [[diagram]]
        employs at least two processes, one running on the client and one on the server
        [[diagram]]
        // in peer-to-peer systems there are no fixed clients and servers, each device can perform both

    network types
        - wireless networks
        - personal area networks
            interprocessor distance: 1m
        - local area networks
            interprocessor distance: 10m - 1km
        - metropolitan area networks
            interprocessor distance: 10km
        - wide area networks
            interprocessor distance: 100km - 1,000km
        - the internet
            interprocessor distance: 10,000km

        [[diagram]]

            two main types of networks
                - eyeball networks
                - content provider networks
                - tier one networks (interconnection, bandwidth providers)

        local area network - LAN
            various topologies
                - bus
                    [[diagram]]
                - ring
                    [[diagram]]
                    useful due to redundancy and routing advantages
                - star
                    ethernet
            LANs are privately owned, and can occupy a single room, building, or campus
            restricted in size, so the worst case transmission time is bounded and known
            very often connect each machine to the same cable

            ethernet
                bus-based broadcast decentralised network
                connected computers can transmit whenever they want, if packets collide they just wait a random time and try again

        metropolitan area network
            [[diagram]]
            example using cable tv network

        wide area network
            [[diagram]]
            relation between hosts on LANs and the subnet
            spans over a large area
            connects hosts to each other via a communication subnet
            a subnet is comprised of two components
                - transmission lines
                    moves bits between networks (fibre, copper, radio)
                - switching components
                    specialised computers that connect transmission lines
                    chooses which outgoing line to put incoming data on
                    also called routers

            [[diagram]]
            when sending a message, the message is cut up into small "envelopes", called 
            a stream of packets from a sender to a receiver
            a "store-and-forward" or packet switched network is one where the packets are received entirely at intermediate routers, stored until an outgoing line is free, and then forward them to the next router
                // when the packets are small and the same size, they are called cells

        wireless networks
            - bluetooth
                a system interconnection network, refers to interconnecting computer components
                master-slave topology
                the master tells the slave what addresses to use, when they can broadcast, how long they can transmit, what frequencies they can use, and other information
            - wireless LAN
                each computer has a radio modem and antenna with which it can communicate with other systems 
                IEEE 802.11 is a basic standard for wirelesss LAN
                a number of newer, derivative standards are in place now
            - wireless WAN
                cellular phone networks; 3g, 4g, 5g
            

    /*
        HEAnet (higher education authority network)
            connects colleges
            WAN
    */

    network software
        protocol hierarchies
            [[diagram]] - layers, protocols, and interfaces
            to reduce complexity of design, the network is organised into layers
            not every layer has an associated protocol
            the basic purpose of a layer is to create interfaces to allow higher layers to use its resources

            protocol - a means for layers on the same level to communicate
            interface - a means for layers of different levels to communicate

            only 3 physical mediums are realistically used in communication; fibre, copper, and wireless
                layer 1 might interface with this medium
                layer 2 interfaces with layer 1, therefore the higher you go the more abstract, and the more common the layers become

            protocol stack
                -> the philosopher-translator-secretary architecture
                    the philosopher has the "data", and wants to communicate this with a philosopher who speaks a different language
                    the tranlsator switches it to a common language
                    the secretary faxes it to the other philosopher's secretary, who begins undoing the process
                    // each of these peer processes are a protocol

            [[diagram]]
                - a message is produced in layer 5, by an application for example
                - this message is given to layer 4 for transmission, which adds a header related to its own protocol
                - at layer three, the message has been split into packets as the message was too large to send, and the layer 3 header has been added
                    // this is to do with the physical limitations of transmission protocols such as ethernet
                - at layer 2 it is framed by a header and a trailer (maybe associated by wifi?)
                - then the message is passed over the medium to the destination machine

            design issues for layers
                addressing
                    consequence of having multiple destinations
                error control
                    the receiver should be able to inform the sender which data was received correctly
                flow control
                    keep sender from swamping slow receiver with data
                    keep sender from swamping slow networks
                multiplexing
                    use same communication channel for multiple, unrelated conversations
                routing
                    when multiple paths exist between the source and destination, the optimal one must be chosen
                
            connection-oriented and connectionless services
                connection-oriented
                    e.g. tcp
                    reliable message stream (sequence of pages, file transfer)
                    reliable byte stream (remote login)
                    unreliable connection (digitized voice of video) -> better to lose data than delay
                connectionless
                    e.g. ip
                    datagram service (in analogy with telegram service)
                        -> acknowledged datagram service
                    request-reply service
                
            services to protocol relationship
                [[diagram]]
                service: set of primitives (operations) that a layer provides to the layer above it, relate to the interfaces
                protocol: set of rules governing the format and meaning of packets exchanged by peers within a layer, relate to packets sent between entities in different machines

    reference models
        osi reference model
            open systems interconnect
            based on a proposal by the iso to standardise the protocols used in various layers
            [[diagram]]
                // note: never actually got used, but is used as a reference
                // sort of an ideal form

            design principles
                - a layer should be created where different abstraction is needed
                - each layer should have a well-defined function
                - the function should be aimed towards an internationally standardised protocol
                - layer boundaries should be chosen to minimise the data flow between layers
                - the number of layers should be large enough to avoid throwing together small, disparate functions, and small enough to avoid inefficiency
            
            // TODO: fill these in
            7 layers
                // all 7 are only used in the first sender or the ultimate destination
                7 - application
                6 - presentation
                5 - session
                4 - transport
                    end-to-end
                    goal is to provide reliable transport across a routed network
                3 - network
                    main job is routing
                2 - data link
                1 - physical
                    // 1 & 2 are basically inseperable, as they're tied to the specific physical medium that is used to transmit data

        tcp/ip reference model
            [[diagram]]
            used by internet, packet switching networks based on a connectionless internetwork layer

            internet layer - ip
                permits the host to inject packets into the network, and have them travel independently to the destintation
                the packets may arrive in the wrong order, or not at all (disorderly delivery)
                higher layers can change these
                defines an official packet format and protocol, called ip (internet protocol). the job of the internet layer is to route ip packets

            transport layers - tcp & udp
                designed to allow peer entities on the source and destination to carry on a conversation
                tcp - transmission control protocol
                    end to end reliable protocol that allows a byte stream originating form one machine to be delivered with no error
                udp - user datagram protocol
                    unreliable connectionless protocol for aplications that don't want tcp's sequencing flow control and want to provide theirs

            host-to-network layer
                total black box
                leaves it to the network itself to do

        comparing tcp and osi
            central concepts are similar
                -> service, protocols, interfaces
            the osi reference was developed before the protocols were created
                -> modle is not biased towards certain protocols, but is generic
            osi
                supports connectionless and connection-oriented at the network layer, and only one 
        // TODO: above and below
        why not osi?
            - bad timing
            - bad technology
            - bad implementations
            - bad politics