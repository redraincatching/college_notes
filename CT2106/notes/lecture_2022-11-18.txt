static fields
    scope at class level, rather than object-level
    generally capitalised
    generally declared public
    often declared final
    e.g. Card.SUITS, Math.PI

exception handling
    an exception is a runtime error - occurs when the program is asked to do something impossible
    represented by an exception object

    throwing an exception
        1) detect the error
        2) create an exception object
        3) passing the exception object to the jre exception handling procedure (ensures method does not run)
        
        jre then looks for a part of the program to take responsibility for the problem
        therefore, the code should be able to catch the error

        when you want a method to throw an exception you need to add that exception to the method signature
            e.g. 
                public Card (int suit, int rank) throws IllegalArgumentException {
                    // ...
                }

        if the exception would occur, add the throw keyword
            e.g. 
                throw new IllegalArgumentException("error message");

        recovering from an exception
            to recover from en exception, use the try/catch structure
                try: try to execute this piece of code. if it executes with no exception, then the catch clause is not executed
                catch: used to handle an exception

            syntax
                try () {
                    // do things
                } 
                catch (/* the ExceptionClass variable */) {
                    // do other things
                }

        // so you define throwing the exception in the method itself, and enclose the method call in the try/catch block

comparable interface